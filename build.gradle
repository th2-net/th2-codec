/*
 *  Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

plugins {
    id "com.jfrog.bintray" version '1.8.5'
    id 'com.jfrog.artifactory' version '4.15.1'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

ext {
    genDir             = file('src/gen')
    sharedDir          = file("${project.rootDir}/shared")
    sailfishVersion     = '3.2-SNAPSHOT'
}

group 'com.exactpro.th2'
version release_version

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }

    mavenCentral()

    maven {
        name 'Bintray'
        url 'https://dl.bintray.com/exactpro/th2'
    }

    maven {
        name 'Bintray'
        url 'https://dl.bintray.com/exactpro/sailfish'
    }

    maven {
        name 'Artifactory-snapshot-oss'
        url 'https://oss.jfrog.org/artifactory/libs-snapshot'
    }

    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}


dependencies {
    api platform('com.exactpro.th2:bom:2.10.1')

    implementation 'com.exactpro.th2:grpc-common:3.0.1'
    implementation 'com.exactpro.th2:common:3.5.1'
    implementation 'com.exactpro.th2:sailfish-utils:3.0.0'

    implementation 'io.github.microutils:kotlin-logging:1.7.+'

    implementation 'org.slf4j:slf4j-api'
    implementation 'org.slf4j:slf4j-log4j12'

    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'

    implementation("com.github.ajalt:clikt:2.7.0")

    implementation 'com.google.protobuf:protobuf-java-util'

    implementation "com.exactpro.sf:sailfish-core:${sailfishVersion}"

    testImplementation 'org.mockito:mockito-inline:3.5.6'
}

jar {
    manifest {
        attributes(
                'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title': '',
                'Specification-Vendor': 'Exactpro Systems LLC',
                'Implementation-Title': project.archivesBaseName,
                'Implementation-Vendor': 'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version': project.version
        )
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    (options as StandardJavadocDocletOptions).addBooleanOption("html5", true)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
        bintrayPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId rootProject.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('name', rootProject.name)
                root.appendNode('url', project.vcs_url)
            }
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
    }
}

bintray {
    user = "${bintray_user}"
    key = "${bintray_key}"
    publications = ['bintrayPublication']
    pkg {
        repo = 'th2'
        name = rootProject.name
        userOrg = 'exactpro'
        licenses = ['Apache-2.0']
        vcsUrl = project.vcs_url
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
    publish = true
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
